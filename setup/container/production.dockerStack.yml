version: "3.3"

networks:
  proxy:
    external: true
    # driver: overlay

# volumes:
  # data:
  #   driver: rexray
  #   driver_opts:
  #     size: "100"
  #     volumetype: "pd-ssd"
  # data:
  #   external: true

services:

  proxy:
    image: myuserindocker/redbird-reverseproxy:latest
    ports:
      - 80:80
      - 443:443
      - 3000:3000
    networks:
      - proxy
    volumes:
      # - "/mnt/datadisk-1/redbirdProxy/server/webappProxyConfig:/app/server/webappProxyConfig"
      - "/mnt/datadisk-1/redbirdProxy/certificate:/project/application/certificate/"
    deploy:
      replicas: 1
    environment:
      DEPLOYMENT: production
      EMAIL: ${EMAIL}
      LETSENCRYPT_PORT: ${LETSENCRYPT_PORT}
    # working_dir: /project/application/server
    command: bash -c "npm install; node entrypoint.js"

  # swarm-listener:
  #   image: vfarcic/docker-flow-swarm-listener
  #   networks:
  #     - default
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - DF_NOTIF_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
  #     - DF_NOTIF_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]

  # the service keeps restarting and checking or issuing certificates, as it is not built with automatic timed execution. It executes and then closes container.
  # letsencrypt: 
  #   image: certbot/dns-google:latest
  #   ports:
  #     - 80:80
  #     - 443:443
  #     - 3000:3000
  #   volumes: 
  #     - "/mnt/datadisk-1/redbirdProxy/certificate:/etc/letsencrypt/"
  #   deploy:
  #     replicas: 1
  #   environment:
  #     EMAIL: ${EMAIL}
  #   entrypoint: 'certbot certonly --agree-tos -n --test-cert --dns-google -m $EMAIL -d table.io -d cdn.taleb.io -d api.taleb.io -d socket.taleb.io'

  ### Docker 'run' equivalent: 
  # docker run -v /mnt/datadisk-1/redbirdProxy/certificate:/etc/letsencrypt/ --entrypoint "certbot" certbot/dns-google:latest  certonly --agree-tos -n --test-cert --dns-google -m $EMAIL 
  # -d taleb.io -d cdn.taleb.io -d api.taleb.io -d socket.taleb.io
  # -d gaziteng.com -d cdn.gaziteng.com -d api.gaziteng.com -d socket.gaziteng.com
  # -d naifaboswiss.com -d cdn.naifaboswiss.com -d api.naifaboswiss.com -d socket.naifaboswiss.com 