# TODO: FIX

version: "3.3"

networks:
  internal:
    external: false
  proxy:
    external: true
    # driver: overlay

# volumes:
#   data:
#     driver: rexray
#     driver_opts:
#       size: "100"
#       volumetype: "pd-ssd"
#   data:
#     external: true

services:
  proxy:
    image: myuserindocker/redbird-reverseproxy:latest
    ports:
      - 80:80
      - 443:443
      - 3000:3000
    networks:
      - proxy
    volumes:
      # - "/mnt/datadisk-1/redbirdProxy/server/webappProxyConfig:/app/server/webappProxyConfig"
      - "/mnt/datadisk-1/redbirdProxy/certificate:/project/application/certificate/"
    environment:
      DEPLOYMENT: production
      EMAIL: ${EMAIL}
      LETSENCRYPT_PORT: ${LETSENCRYPT_PORT}
    command: bash -c "node entrypoint.js"

  swarm-listener:
    image: docker-flow/docker-flow-swarm-listener
    networks:
      - internal
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DF_NOTIF_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
      - DF_NOTIF_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove

  # the service keeps restarting and checking or issuing certificates, as it is not built with automatic timed execution. It executes and then closes container.
  letsencrypt:
    image: certbot/dns-google:latest
    ports:
      - 80:80
      - 443:443
      - 3000:3000
    volumes:
      - "/mnt/datadisk-1/redbirdProxy/certificate:/etc/letsencrypt/"
    environment:
      EMAIL: ${EMAIL}
    entrypoint: 'certbot certonly --agree-tos -n --test-cert --dns-google -m $EMAIL -d table.io -d cdn.taleb.io -d api.taleb.io -d socket.taleb.io'
  
